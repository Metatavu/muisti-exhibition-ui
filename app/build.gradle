apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

kapt {
    correctErrorTypes true
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    file('.env').readLines().each() {
        if (!it.isEmpty() && !it.startsWith("#")) {
            def pos = it.indexOf("=")
            def key = it.substring(0, pos)
            def value = it.substring(pos + 1)

            if (System.getProperty(key) == null) {
                System.setProperty(key, value)
            }
        }
    }

    defaultConfig {
        applicationId "fi.metatavu.muisti.exhibitionui"
        minSdkVersion 29
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            buildConfigField("String", "MUISTI_API_BASE_URL", "\"${System.getProperty('MUISTI_API_BASE_URL')}\"")
            buildConfigField("String", "KEYCLOAK_URL", "\"${System.getProperty('KEYCLOAK_URL')}\"")
            buildConfigField("String", "KEYCLOAK_REALM", "\"${System.getProperty('KEYCLOAK_REALM')}\"")
            buildConfigField("String", "KEYCLOAK_CLIENT_ID", "\"${System.getProperty('KEYCLOAK_CLIENT_ID')}\"")
            buildConfigField("String", "KEYCLOAK_USERNAME", "\"${System.getProperty('KEYCLOAK_USERNAME')}\"")
            buildConfigField("String", "KEYCLOAK_PASSWORD", "\"${System.getProperty('KEYCLOAK_PASSWORD')}\"")
            buildConfigField("Boolean", "DESTRUCTIVE_MIGRATIONS", System.getProperty('DESTRUCTIVE_MIGRATIONS'))
        }
    }

    lintOptions {
        disable('AllowBackup', 'GoogleAppIndexingWarning', 'MissingApplicationIcon')
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation project(':api-client')
    implementation "com.squareup.okhttp3:okhttp:4.2.2"
    implementation "io.github.cdimascio:java-dotenv:5.1.3"

    // Moshi

    implementation "com.squareup.moshi:moshi-kotlin:1.8.0"
    implementation "com.squareup.moshi:moshi-adapters:1.8.0"

    // Room components

    implementation "androidx.room:room-runtime:$rootProject.roomVersion"
    implementation "androidx.room:room-ktx:$rootProject.roomVersion"
    kapt "androidx.room:room-compiler:$rootProject.roomVersion"

    // Lifecycle components

    implementation "androidx.lifecycle:lifecycle-extensions:$rootProject.archLifecycleVersion"
    kapt "androidx.lifecycle:lifecycle-compiler:$rootProject.archLifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$rootProject.archLifecycleVersion"

    // ViewModel Kotlin support

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$rootProject.archLifecycleVersion"

    // UI

    implementation "com.google.android.material:material:$rootProject.materialVersion"

    // JWT decode

    implementation 'com.auth0.android:jwtdecode:1.4.0'
}
